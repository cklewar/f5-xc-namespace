name: F5XC namespace module
on: push
jobs:
  f5-xc-namespace-module-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      #- uses: actions/setup-node@v3
      #  with:
      #    node-version: '14'
      #- name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v1
      #  with:
      #    aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
      #    aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
      #    aws-region: us-east-2
      - name: Setup environment
        id: setup_env
        run: |
          cp main.tf.example main.tf

      - name: Setup Terraform
        id: setup_tf
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        env:
          VES_P12_PASSWORD: ${{ secrets.VES_P12_PASSWORD }}
          TF_VAR_f5xc_api_url: ${{ secrets.f5xc_api_url }}
          TF_VAR_f5xc_api_p12_file: ${{ secrets.f5xc_api_p12_file }}
          TF_VAR_f5xc_namespace_name: "f5-xc-test-namespace-01"
        run: terraform plan -no-color
        continue-on-error: false

      - name: Cleanup environment
        id: cleanup_env
        run: |
          rm main.tf

      - run: echo "This job's status is ${{ job.status }}."